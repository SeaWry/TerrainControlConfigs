
#######################################################################
# +-----------------------------------------------------------------+ #
# |                    Extreme Hills biome config                   | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Biome size from 0 to GenerationDepth. Show in what zoom level biome will be generated (see GenerationDepth)
# Higher numbers=Smaller% of world / Lower numbers=Bigger % of world
# Don`t work on Ocean and River (frozen versions too) biomes until not added as normal biome.
BiomeSize:5

# Biome rarity from 100 to 1. If this is normal or ice biome - chance for spawn this biome then others.
# Example for normal biome :
#   100 rarity mean 1/6 chance than other ( with 6 default normal biomes).
#   50 rarity mean 1/11 chance than other
# For isle biome this is chance to spawn isle in good place.
# Don`t work on Ocean and River (frozen versions too) biomes until not added as normal biome.
BiomeRarity:60

# Biome color in hex value. Biome color in /tc map command
BiomeColor:0x333300

# True if biome can pass rivers.
BiomeRivers:true

# Biome name list where this biome will be spawned as isle. Like Mushroom isle in Ocean.  This work only if this biome is in IsleBiomes in world config
IsleInBiome:

# Biome name list where this biome will be border.Like Mushroom isle shore. Use is compared as IsleInBiome
BiomeIsBorder:

# Biome name list near border is not applied. 
NotBorderNear:

# Biome temperature. Float value from 0.0 to 1.0
BiomeTemperature:0.2

# Biome wetness. Float value from 0.0 to 1.0
BiomeWetness:0.3

# Replace this biome to specified after all generations. Warning this will cause saplings and mob spawning work as in specified biome
ReplaceToBiomeName:


#######################################################################
# +-----------------------------------------------------------------+ #
# |                   Terrain Generator Variables                   | #
# +-----------------------------------------------------------------+ #
#######################################################################

# BiomeHeight mean how much height will be added in terrain generation
# It is double value from -10.0 to 10.0
# Value 0.0 equivalent half of map height with all other default settings
BiomeHeight:0.2

# Biome volatility.
BiomeVolatility:0.9

# If this value is greater than 0, then it will affect how much, on average, the terrain will rise before leveling off when it begins to increase in elevation.
# If the value is less than 0, then it will cause the terrain to either increase to a lower height before leveling out or decrease in height if the value is a large enough negative.
MaxAverageHeight:-2.1

# If this value is greater than 0, then it will affect how much, on average, the terrain (usually at the ottom of the ocean) will fall before leveling off when it begins to decrease in elevation. 
# If the value is less than 0, then it will cause the terrain to either fall to a lesser depth before leveling out or increase in height if the value is a large enough negative.
MaxAverageDepth:-3.1

# Another type of noise. This noise is independent from biomes. The larger the values the more chaotic/volatile landscape generation becomes.
# Setting the values to negative will have the opposite effect and make landscape generation calmer/gentler.
Volatility1:-2.5
Volatility2:-2.9

# Adjust the weight of the corresponding volatility settings. This allows you to change how prevalent you want either of the volatility settings to be in the terrain.
VolatilityWeight1:0.5
VolatilityWeight2:0.55

# Disable all noises except Volatility1 and Volatility2. Also disable default block chance from height.
DisableBiomeHeight:false

# List of custom height factor, 17 double entries, each entire control of about 7 blocks height from down. Positive entry - better chance of spawn blocks, negative - smaller
# Values which affect your configuration may be found only experimental. That may be very big, like ~3000.0 depends from height
# Example:
#   CustomHeightControl:0.0,-2500.0,0.0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
# Make empty layer above bedrock layer. 
CustomHeightControl:0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0

# Surface block id
SurfaceBlock:1

# Block id from stone to surface, like dirt in plain biome 
GroundBlock:4
# If disabled use water levels and blocks below for this biome
UseWorldWaterLevel:true

# Set water level. Every empty block under this level will be fill water or another block from WaterBlock 
WaterLevelMax:64
WaterLevelMin:0

# BlockId used as water in WaterLevel
WaterBlock:9

# BlockId used as ice
IceBlock:79

# Replace Variable: (BlockIdFrom,BlockIdTo[,BlockDataTo,minHeight,maxHeight])
# Example :
#   ReplacedBlocks:(2,3,0,100,127),(13,20)
# Replace grass block to dirt from 100 to 127 height and replace gravel to glass on all height 
ReplacedBlocks:None

#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Biome visual settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Warning this section will work only for clients with single version of TerrainControl

# Biome sky color
SkyColor:0x7ba5ff

# Biome water color multiplier 
WaterColor:0xffffff

# Biome grass color
GrassColor:0xffffff

# Whether the grass color is a multiplier
# If you set it to true, the color will be based on this value, the BiomeTemperature and the BiomeWetness
# If you set it to false, the grass color will be just this color
GrassColorIsMultiplier:true

# Biome foliage color
FoliageColor:0xffffff

# Whether the foliage color is a multiplier. See GrassColorIsMultiplier for details
FoliageColorIsMultiplier:true


#######################################################################
# +-----------------------------------------------------------------+ #
# |                         Sapling resource                        | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Work like Tree resource instead first parameter


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Resource queue                         | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This section control all resources spawning after terrain generation
# So first line is first resource which will be placed. Second line - second resource.
# By default this set to be near vanilla settings.
# 
# Keep in mind that a high size, frequency or rarity might slow down terrain generation.
# 
# Possible resources:
# SmallLake(Block[.BlockData],Frequency,Rarity,MinAltitude,MaxAltitude)
# Dungeon(Frequency,Rarity,MinAltitude,MaxAltitude)
# UnderGroundLake(MinSize,MaxSize,Frequency,Rarity,MinAltitude,MaxAltitude)
# Ore(Block[.BlockData],Size,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# UnderWaterOre(Block,Size,Frequency,Rarity,maxDepth,BlockSource[,BlockSource2,BlockSource3.....])
# CustomObject()
# Tree(Frequency,TreeType,TreeType_Chance[,Additional_TreeType,Additional_TreeType_Chance.....])
# Plant(Block[.BlockData],Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# Grass(Block,BlockData,Frequency,Rarity,BlockSource[,BlockSource2,BlockSource3.....])
# Reed(Block,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# Cactus(Block,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# Liquid(Block,Frequency,Rarity,MinAltitude,MaxAltitude,BlockSource[,BlockSource2,BlockSource3.....])
# AboveWaterRes(Block,Frequency,Rarity)
# Vines(Frequency,Rarity,MinAltitude,MaxAltitude)
# 
# Some comments:  
# Block and BlockSource - can be id or name, Frequency - is count of attempts for place resource
# Rarity - chance for each attempt, Rarity:100 - mean 100% to pass, Rarity:1 - mean 1% to pass
# MinAltitude and MaxAltitude - height limits
# BlockSource - mean where or whereupon resource will be placed 
# CustomObject resource - mean where in queue custom object will be trying to place
# Tree types: 
#      Tree
#      BigTree
#      Forest
#      HugeMushroom
#      SwampTree
#      Taiga1
#      Taiga2
#      JungleTree
#      GroundBush
#      CocoaTree
# TreeType_Chance - similar Rarity. Example:
#   Tree(10,Taiga1,35,Taiga2,100) - plugin trying to 10 attempts, in each attempt he try place Taiga1 ( 35% chance ) if not he place Taiga2 (100% chance)
# Plant resource used for place something like flower, small mushrooms, pumpkins
# Liquid resource is one block water or lava source
# 
Ore(SNOW_BLOCK.9,32,1,10,140,255,AIR)
SmallLake(WATER,4,7,8,64)
UnderGroundLake(25,60,2,5,0,50)
Ore(DIRT,32,20,100,0,128,STONE)
Ore(GRAVEL,32,10,100,0,128,STONE)
Ore(CLAY,32,1,100,0,128,STONE)
Ore(COAL_ORE,16,20,100,0,128,STONE)
Ore(IRON_ORE,8,20,100,0,64,STONE)
Ore(GOLD_ORE,8,2,100,0,32,STONE)
Ore(REDSTONE_ORE,7,8,100,0,16,STONE)
Ore(DIAMOND_ORE,7,1,100,0,16,STONE)
Ore(LAPIS_ORE,7,1,100,0,16,STONE)
UnderWaterOre(SAND,7,4,100,DIRT,GRASS)
UnderWaterOre(CLAY,4,1,100,DIRT,CLAY)
CustomObject(UseWorld)
Tree(1,BigTree,1,Tree,9)
Plant(RED_ROSE,2,100,0,128,GRASS,DIRT,SOIL)
Plant(YELLOW_FLOWER,2,100,0,128,GRASS,DIRT,SOIL)
Grass(LONG_GRASS,1,10,100,GRASS,DIRT)
Plant(PUMPKIN,1,3,0,128,GRASS)
Liquid(WATER,20,100,40,128,STONE)
Liquid(LAVA,15,100,1,35,STONE)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Custom objects                         | #
# +-----------------------------------------------------------------+ #
#######################################################################

# These objects will spawn when using the UseBiome keyword.
BiomeObjects:

#######################################################################
# +-----------------------------------------------------------------+ #
# |                           MOB SPAWNING                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Mob spawning control did not work with default biomes.
